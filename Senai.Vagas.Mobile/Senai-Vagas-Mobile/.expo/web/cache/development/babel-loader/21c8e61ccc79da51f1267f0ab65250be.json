{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\login\\\\Login.tsx\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'sansation-regular': require(\"../../assets/fonts/Sansation_Regular.ttf\")\n  });\n};\n\nexport default function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  var login = function login() {\n    var form = {\n      email: email,\n      senha: senha\n    };\n\n    if (form.email.length === 0 || form.senha.length === 0) {\n      return Alert.alert('Preencha todos os campos.');\n    }\n\n    var init = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    };\n    fetch('http://wolfrosfay4-001-site1.btempurl.com/api/login', init).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      if (data.token !== undefined) {\n        AsyncStorage.setItem('token-usuario', data.token);\n        console.log('token: ' + data.token);\n      } else {\n        Alert.alert(\"OOPS!!\", \"vcrifique os dados inseridos\", [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"Cancel Pressed\");\n          }\n        }], {\n          cancelable: false\n        });\n      }\n    }).catch(function (erro) {\n      return console.log(erro);\n    });\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fontsLoaded = _useState6[0],\n      setFontsLoaded = _useState6[1];\n\n  if (fontsLoaded) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 8\n      }\n    }, React.createElement(Image, {\n      style: styles.logo,\n      source: require(\"../../assets/images/LogoAppVermelho.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 8\n      }\n    })), React.createElement(Text, {\n      style: styles.tlogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Fa\\xE7a seu login\"), React.createElement(Text, {\n      style: styles.ti,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, \"Email\"), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"\",\n      onChangeText: function onChangeText(e) {\n        return setEmail(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 10\n      }\n    }), React.createElement(Text, {\n      style: styles.ti,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }\n    }, \"Senha\"), React.createElement(TextInput, {\n      style: styles.input,\n      secureTextEntry: true,\n      placeholder: \"\",\n      onChangeText: function onChangeText(e) {\n        return setSenha(e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 10\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress(event) {\n        event.preventDefault();\n        login();\n      },\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: styles.textoB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 12\n      }\n    }, \"Login\")), React.createElement(TouchableOpacity, {\n      style: styles.buttonES,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: styles.textoB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, \"Esqueci minha senha\")), React.createElement(TouchableOpacity, {\n      style: styles.buttonc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: styles.textoB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }, \"cadastrar como candidato\")), React.createElement(TouchableOpacity, {\n      style: styles.buttonc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }\n    }, React.createElement(Text, {\n      style: styles.textoB,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 12\n      }\n    }, \"cadastrar como empresa\")));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBFBFB',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 860\n  },\n  logo: {\n    width: 220,\n    height: 60\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    borderColor: \"black\",\n    borderWidth: 0.2\n  },\n  button: {\n    backgroundColor: '#D20003',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center'\n  },\n  buttonES: {\n    backgroundColor: '#016799',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center'\n  },\n  buttonc: {\n    backgroundColor: '#ffff',\n    margin: 10,\n    borderRadius: 15,\n    width: 150,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.3,\n    fontSize: 12\n  },\n  tlogin: {\n    textDecorationColor: '#505050',\n    fontFamily: 'sansation-regular',\n    padding: 30\n  },\n  ti: {\n    marginRight: 150,\n    textDecorationColor: '#505050',\n    fontFamily: 'sansation-regular'\n  },\n  textoBC: {\n    color: '#016799',\n    fontFamily: 'sansation-regular',\n    textAlign: \"center\",\n    justifyContent: 'center'\n  },\n  textoB: {\n    fontFamily: 'sansation-regular',\n    color: '#E0E0E0',\n    textAlign: \"center\",\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/senai/Desktop/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/login/Login.tsx"],"names":["React","useState","Font","AppLoading","AsyncStorage","getFonts","loadAsync","require","Login","email","setEmail","senha","setSenha","login","form","length","Alert","alert","init","method","headers","body","JSON","stringify","fetch","then","resp","json","data","token","undefined","setItem","console","log","text","onPress","cancelable","catch","erro","fontsLoaded","setFontsLoaded","styles","container","logo","tlogin","ti","input","e","event","preventDefault","button","textoB","buttonES","buttonc","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","margin","borderRadius","borderColor","borderWidth","textAlign","shadowOffset","shadowColor","shadowOpacity","fontSize","textDecorationColor","fontFamily","padding","marginRight","textoBC","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport {AppLoading} from 'expo';\r\nimport { StyleSheet, Text, View , Image, TextInput , TouchableOpacity, Alert} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useHistory } from 'react-router-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'sansation-regular': require('../../assets/fonts/Sansation_Regular.ttf')\r\n});\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  \r\n  const login = () => {\r\n      const form = {\r\n          email: email,\r\n          senha: senha,\r\n      };\r\n\r\n      if (form.email.length === 0 || form.senha.length === 0) {\r\n          return Alert.alert('Preencha todos os campos.');\r\n      }\r\n\r\n      const init = {\r\n          method: 'post',\r\n          headers: {'Content-Type': 'application/json',},\r\n          body: JSON.stringify(form),\r\n      };\r\n\r\n      fetch('http://wolfrosfay4-001-site1.btempurl.com/api/login', init)\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n              if (data.token !== undefined) {\r\n                  AsyncStorage.setItem('token-usuario', data.token)\r\n                  console.log('token: ' + data.token)\r\n              }\r\n              else {\r\n                Alert.alert(\r\n                  \"OOPS!!\",\r\n                  \"vcrifique os dados inseridos\",\r\n                  [\r\n                    {\r\n                      text: \"OK\",\r\n                      onPress: () => console.log(\"Cancel Pressed\"),  \r\n                    },\r\n                  ],\r\n                  { cancelable: false }\r\n                );\r\n            \r\n              }\r\n          })\r\n          .catch(erro => console.log(erro));\r\n  };\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n\r\n    if (fontsLoaded) {\r\n      return (\r\n        <View style={styles.container}>\r\n       <View>\r\n       <Image \r\n         style={styles.logo}\r\n         source={require('../../assets/images/LogoAppVermelho.png')}\r\n         />\r\n       </View>\r\n        \r\n        <Text style={styles.tlogin}>Faça seu login</Text>\r\n        \r\n        <Text style={styles.ti}>Email</Text>\r\n         <TextInput\r\n         style={styles.input}\r\n         placeholder=\"\"\r\n         onChangeText={(e: any) => setEmail(e)}\r\n         />\r\n  \r\n         <Text style={styles.ti}>Senha</Text>\r\n         <TextInput\r\n         style={styles.input}\r\n         secureTextEntry={true}\r\n         placeholder=\"\"\r\n         onChangeText={(e: any) => setSenha(e)}\r\n         />\r\n   \r\n         <TouchableOpacity  onPress={event => {\r\n                        event.preventDefault();\r\n                        login();\r\n                    }} style={styles.button}>\r\n           <Text style={styles.textoB}>\r\n             Login\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttonES}>\r\n           <Text style={styles.textoB}>\r\n             Esqueci minha senha\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttonc}>\r\n           <Text style={styles.textoB}>\r\n             cadastrar como candidato\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttonc}>\r\n           <Text style={styles.textoB}>\r\n             cadastrar como empresa\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n       </View>\r\n     );\r\n   \r\n      \r\n    } else {\r\n      return (\r\n        <AppLoading \r\n          startAsync={getFonts} \r\n          onFinish={() => setFontsLoaded(true)} \r\n        />\r\n      )\r\n    }\r\n    \r\n  }\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FBFBFB',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 860,\r\n      \r\n    },\r\n    \r\n    logo: {\r\n      width:220,\r\n      height: 60,\r\n    },\r\n  \r\n    input: {\r\n      backgroundColor: '#FFFFFF',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      //shadowOffset:{  width: 2,  height: 2,  },\r\n      //shadowColor: 'black',\r\n      //shadowOpacity: 0.3,\r\n      borderColor: \"black\",\r\n      borderWidth: 0.2,\r\n    },\r\n  \r\n    button: {\r\n      backgroundColor: '#D20003',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n      \r\n    },\r\n  \r\n    buttonES: {\r\n      backgroundColor: '#016799',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n  \r\n    },\r\n  \r\n    buttonc: {\r\n      backgroundColor: '#ffff',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 150,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n      shadowOffset:{  width: 2,  height: 2,  },\r\n      shadowColor: 'black',\r\n      shadowOpacity: 0.3,\r\n      fontSize: 12\r\n      \r\n  \r\n    },\r\n  \r\n    tlogin: {\r\n      textDecorationColor: '#505050',\r\n      fontFamily: 'sansation-regular',\r\n      //marginTop: 20,\r\n      padding :30,\r\n    },\r\n  \r\n    ti:{\r\n      marginRight: 150,\r\n      textDecorationColor: '#505050',\r\n      fontFamily: 'sansation-regular'\r\n    },\r\n  \r\n    textoBC: {\r\n      color: '#016799',\r\n      fontFamily: 'sansation-regular',\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n    },\r\n    textoB:{\r\n      fontFamily: 'sansation-regular',\r\n      color:'#E0E0E0',\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n    }\r\n  });\r\n  \r\n"]},"metadata":{},"sourceType":"module"}