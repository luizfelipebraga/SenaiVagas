{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Senai\\\\ReactNative\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\HomeCandidato.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport api from \"../services/api\";\nimport jwt from \"../services/tokenDecoder\";\nimport CardCandidatoHome from \"../components/cardCandidatoHome\";\n\nfunction HomeCandidato() {\n  var _this = this;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      palavraChave = _useState2[0],\n      setPalavraChave = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vagas = _useState4[0],\n      updateVagas = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Vagas = _useState6[0],\n      setVagas = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      municipios = _useState8[0],\n      setMunicipios = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      faixasSalariais = _useState10[0],\n      setFaixasSalariais = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      areasRecomendadas = _useState12[0],\n      setAreasRecomendadas = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      listMunicipios = _useState14[0],\n      setListMunicipios = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      idAreaRecomendada = _useState16[0],\n      setIdAreaRecomendada = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      idMunicipio = _useState18[0],\n      setIdMunicipio = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      idFaixaSalarial = _useState20[0],\n      setIdFaixaSalarial = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      filter = _useState22[0],\n      setFilter = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      vagafilter = _useState24[0],\n      setVagaFilter = _useState24[1];\n\n  var tokenDecoded = jwt(response);\n  useEffect(function () {\n    ListarVaga();\n  }, []);\n\n  var ListarVaga = function ListarVaga() {\n    var initListar;\n    return _regeneratorRuntime.async(function ListarVaga$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(tokenDecoded == null)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert('Não foi possível carregar as informações do candidato'));\n\n          case 2:\n            initListar = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.get(\"Vagas/buscar/area-candidato/\" + tokenDecoded, initListar).then(function (resp) {\n              setVagas(resp.data);\n              console.log(resp.data);\n            }).catch(function (error) {\n              if (error.response) {\n                return alert(error.response.data);\n              }\n            }));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('FaixasSalariais/Buscar-faixas-salariais', initListar).then(function (resp) {\n              setFaixasSalariais(resp.data);\n            }).catch(function (erro) {\n              return console.log(erro);\n            }));\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(api.get('Areas/Buscar-areas', initListar).then(function (resp) {\n              setAreasRecomendadas(resp.data);\n            }).catch(function (erro) {\n              return console.log(erro);\n            }));\n\n          case 9:\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(api.get('Enderecos/buscar-municipios', initListar).then(function (resp) {\n              setListMunicipios(resp.data);\n              setMunicipios(resp.data);\n              setIdMunicipio(resp.data[0].id);\n            }).catch(function (erro) {\n              return console.log(erro);\n            }));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var buscarVagas = function buscarVagas() {\n    var form, initListar;\n    return _regeneratorRuntime.async(function buscarVagas$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(tokenDecoded == null)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", alert('Não foi possível recuperar as informações do candidato para procurar vagas.'));\n\n          case 2:\n            form = {\n              filter: vagafilter\n            };\n\n            if (!(form.filter.length === 0)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", alert('O campo de busca não pode estar vazio.'));\n\n          case 5:\n            initListar = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(api.post(\"Vagas/buscar/vaga-filtro/usuario/\" + tokenDecoded, form, initListar).then(function (resp) {\n              if (resp.status === 200) {\n                setVagas(resp.data);\n              }\n            }).catch(function (error) {\n              console.log(error.response);\n\n              if (error.response) {\n                return alert(error.response.data);\n              }\n            }));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getFonts = function getFonts() {\n    return Font.loadAsync({\n      'sansation-regular': require(\"../assets/fonts/Sansation_Regular.ttf\")\n    });\n  };\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      fontsLoaded = _useState26[0],\n      setFontsLoaded = _useState26[1];\n\n  if (fontsLoaded) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.boxTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.imageInscricao,\n      source: require(\"../assets/images/IconVagas.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.textTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, \"Procurar Vagas\")), React.createElement(View, {\n      style: styles.boxSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputSearch,\n      placeholder: \"Busque Vagas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.botaoSearch,\n      onPress: function onPress(event) {\n        event.preventDefault();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Buscar\"))), React.createElement(View, {\n      style: styles.modalVaga,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, Vagas.map(function (item) {\n      return React.createElement(CardCandidatoHome, {\n        nomeVaga: item.nomeVaga,\n        descricao: item.descricaoVaga,\n        vagaId: item.id,\n        vagaAtiva: item.vagaAtiva,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 33\n        }\n      });\n    })));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBFBFB'\n  },\n  boxTitle: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  imageInscricao: {\n    marginTop: 50,\n    height: 70,\n    width: 70\n  },\n  textTitle: {\n    marginTop: 5,\n    fontSize: 18,\n    fontFamily: 'sansation-regular'\n  },\n  boxSearch: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 30,\n    marginHorizontal: 80,\n    backgroundColor: '#FFFFFF',\n    borderColor: '#bfbfbf',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  inputSearch: {\n    fontSize: 15\n  },\n  botaoSearch: {\n    marginLeft: 10,\n    backgroundColor: 'red',\n    borderRadius: 5,\n    padding: 7\n  },\n  textSearch: {\n    color: 'white',\n    fontSize: 14\n  },\n  modalVaga: {\n    borderColor: 'white'\n  }\n});\nexport default HomeCandidato;","map":{"version":3,"sources":["C:/Users/Felipe/Desktop/Senai/ReactNative/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/HomeCandidato.tsx"],"names":["React","useState","useEffect","Font","AppLoading","api","jwt","CardCandidatoHome","HomeCandidato","palavraChave","setPalavraChave","vagas","updateVagas","Vagas","setVagas","municipios","setMunicipios","faixasSalariais","setFaixasSalariais","areasRecomendadas","setAreasRecomendadas","listMunicipios","setListMunicipios","idAreaRecomendada","setIdAreaRecomendada","idMunicipio","setIdMunicipio","idFaixaSalarial","setIdFaixaSalarial","filter","setFilter","vagafilter","setVagaFilter","tokenDecoded","response","ListarVaga","alert","initListar","headers","get","then","resp","data","console","log","catch","error","erro","id","buscarVagas","form","length","post","status","getFonts","loadAsync","require","fontsLoaded","setFontsLoaded","styles","container","boxTitle","imageInscricao","textTitle","boxSearch","inputSearch","botaoSearch","event","preventDefault","textSearch","modalVaga","map","item","nomeVaga","descricaoVaga","vagaAtiva","StyleSheet","create","flex","backgroundColor","display","flexDirection","alignItems","marginTop","height","width","fontSize","fontFamily","justifyContent","marginHorizontal","borderColor","borderStyle","borderWidth","borderRadius","marginLeft","padding","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport { AppLoading } from 'expo';\r\nimport { View, StyleSheet, Image, TouchableOpacity, TextInput, Text } from 'react-native';\r\n\r\nimport api from '../services/api';\r\nimport jwt from '../services/tokenDecoder';\r\n\r\nimport CardCandidatoHome from '../components/cardCandidatoHome';\r\n\r\n\r\nfunction HomeCandidato() {\r\n\r\n    //dados Alteráveis\r\n    const [palavraChave, setPalavraChave] = useState('')\r\n\r\n    // Variavel com matriz de vagas, com o método que atualizará a lista\r\n    const [vagas, updateVagas] = useState([]);\r\n\r\n    const [Vagas, setVagas] = useState([]);\r\n\r\n    //dados Estáticos\r\n    const [municipios, setMunicipios] = useState([]);\r\n    const [faixasSalariais, setFaixasSalariais] = useState([]);\r\n    const [areasRecomendadas, setAreasRecomendadas] = useState([]);\r\n\r\n    const [listMunicipios, setListMunicipios] = useState([]);\r\n\r\n    const [idAreaRecomendada, setIdAreaRecomendada] = useState('');\r\n    const [idMunicipio, setIdMunicipio] = useState('');\r\n    const [idFaixaSalarial, setIdFaixaSalarial] = useState('');\r\n\r\n    // filtro para municipios\r\n    const [filter, setFilter] = useState('');\r\n    //filtro para vagas\r\n    const [vagafilter, setVagaFilter] = useState('');\r\n\r\n\r\n    let tokenDecoded = jwt(response);\r\n\r\n    // Listar as vagas pela área de interesse de usuário e completa campos do filtro\r\n    useEffect(() => {\r\n        ListarVaga();\r\n    }, []);\r\n\r\n    const ListarVaga = async () => {\r\n\r\n        if (tokenDecoded == null) {\r\n            return alert('Não foi possível carregar as informações do candidato')\r\n        }\r\n\r\n        const initListar = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .get(`Vagas/buscar/area-candidato/${tokenDecoded}`, initListar)\r\n            .then(resp => {\r\n                setVagas(resp.data);\r\n                console.log(resp.data)\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    return alert(error.response.data)\r\n                }\r\n            })\r\n\r\n        await api\r\n            .get('FaixasSalariais/Buscar-faixas-salariais', initListar)\r\n            .then(resp => {\r\n                setFaixasSalariais(resp.data);\r\n            })\r\n            .catch(erro => console.log(erro))\r\n\r\n        await api\r\n            .get('Areas/Buscar-areas', initListar)\r\n            .then(resp => {\r\n                setAreasRecomendadas(resp.data);\r\n            })\r\n            .catch(erro => console.log(erro))\r\n\r\n        await api\r\n            .get('Enderecos/buscar-municipios', initListar)\r\n            .then(resp => {\r\n                setListMunicipios(resp.data);\r\n                setMunicipios(resp.data);\r\n                setIdMunicipio(resp.data[0].id)\r\n            })\r\n            .catch(erro => console.log(erro))\r\n    }\r\n\r\n    const buscarVagas = async () => {\r\n        if (tokenDecoded == null) {\r\n            return alert('Não foi possível recuperar as informações do candidato para procurar vagas.')\r\n        }\r\n\r\n        const form = {\r\n            filter: vagafilter\r\n        }\r\n\r\n        if (form.filter.length === 0) {\r\n            return alert('O campo de busca não pode estar vazio.')\r\n        }\r\n\r\n\r\n        const initListar = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .post(`Vagas/buscar/vaga-filtro/usuario/${tokenDecoded}`, form, initListar)\r\n            .then(resp => {\r\n                if (resp.status === 200) {\r\n                    setVagas(resp.data);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                if (error.response) {\r\n                    return alert(error.response.data)\r\n                }\r\n            })\r\n    }\r\n\r\n    const getFonts = () => Font.loadAsync({\r\n        'sansation-regular': require('../assets/fonts/Sansation_Regular.ttf')\r\n    });\r\n\r\n    const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n    if (fontsLoaded) {\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.boxTitle}>\r\n\r\n                    <Image style={styles.imageInscricao} source={require('../assets/images/IconVagas.png')} />\r\n                    <Text style={styles.textTitle}>Procurar Vagas</Text>\r\n                </View>\r\n\r\n                <View style={styles.boxSearch}>\r\n                    <TextInput style={styles.inputSearch} placeholder=\"Busque Vagas\" />\r\n                    <TouchableOpacity style={styles.botaoSearch} onPress={event => {\r\n                        event.preventDefault();\r\n                        // buscarVagas();\r\n                    }}>\r\n                        <Text style={styles.textSearch}>Buscar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.modalVaga}>\r\n\r\n                    {\r\n                        Vagas.map((item: any) => {\r\n                            return (\r\n                                <CardCandidatoHome\r\n                                    nomeVaga={item.nomeVaga}\r\n                                    descricao={item.descricaoVaga}\r\n                                    vagaId={item.id}\r\n                                    vagaAtiva={item.vagaAtiva}\r\n                                />\r\n                            )\r\n                        })\r\n                    }\r\n                    \r\n                </View>\r\n            </View>\r\n        );\r\n    } else {\r\n        return (\r\n\r\n            <AppLoading\r\n                startAsync={getFonts}\r\n                onFinish={() => setFontsLoaded(true)}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FBFBFB',\r\n    },\r\n\r\n    boxTitle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    imageInscricao: {\r\n        marginTop: 50,\r\n        height: 70,\r\n        width: 70\r\n    },\r\n\r\n    textTitle: {\r\n        marginTop: 5,\r\n        fontSize: 18,\r\n        fontFamily: 'sansation-regular',\r\n    },\r\n\r\n    boxSearch: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n\r\n        marginTop: 30,\r\n        marginHorizontal: 80,\r\n        backgroundColor: '#FFFFFF',\r\n\r\n        borderColor: '#bfbfbf',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n\r\n\r\n    },\r\n\r\n    inputSearch: {\r\n        fontSize: 15\r\n\r\n    },\r\n\r\n    botaoSearch: {\r\n        marginLeft: 10,\r\n        backgroundColor: 'red',\r\n        borderRadius: 5,\r\n        padding: 7\r\n    },\r\n\r\n    textSearch: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n    },\r\n\r\n    modalVaga: {\r\n        borderColor: 'white',\r\n    }\r\n})\r\n\r\nexport default HomeCandidato;"]},"metadata":{},"sourceType":"module"}