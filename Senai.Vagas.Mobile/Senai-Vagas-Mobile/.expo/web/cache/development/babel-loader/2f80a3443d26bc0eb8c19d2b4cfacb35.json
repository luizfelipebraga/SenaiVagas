{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\MinhasInscricoesCandidato.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport api from \"../services/api\";\nimport jwt from \"../services/tokenDecoder\";\n\nfunction MinhasInscricoesCandidato() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      Vagas = _useState2[0],\n      setVagas = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      vagafilter = _useState4[0],\n      setVagaFilter = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      statusVaga = _useState6[0],\n      setStatusVaga = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      idStatusVaga = _useState8[0],\n      setIdStatusVaga = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      statusVagas = _useState10[0],\n      setStatusVagas = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      tokenUser = _useState12[0],\n      setTokenUser = _useState12[1];\n\n  var TokenDecoder = function TokenDecoder(token) {\n    var tokenDecoded = jwt(token);\n    setTokenUser(tokenDecoded);\n  };\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAviso = _useState14[0],\n      setShowAviso = _useState14[1];\n\n  var showModalAviso = function showModalAviso() {\n    return setShowAviso(true);\n  };\n\n  var hideModalAviso = function hideModalAviso() {\n    return setShowAviso(false);\n  };\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      aviso = _useState16[0],\n      setAviso = _useState16[1];\n\n  useEffect(function () {\n    Listar();\n  }, []);\n  var initListar = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  var Listar = function Listar() {\n    return _regeneratorRuntime.async(function Listar$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(tokenUser.jti == null)) {\n              _context.next = 3;\n              break;\n            }\n\n            setAviso('Não foi possível carregar as informações do candidato');\n            return _context.abrupt(\"return\", showModalAviso());\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.get(\"Inscricoes/usuario/\" + tokenUser.jti, initListar).then(function (resp) {}).catch(function (erro) {\n              return console.log(erro);\n            }));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('Vagas/buscar-statusvaga', initListar).then(function (resp) {}).catch(function (erro) {\n              return console.log(erro);\n            }));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var buscarVagas = function buscarVagas() {\n    var form, initListar;\n    return _regeneratorRuntime.async(function buscarVagas$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(tokenUser == null)) {\n              _context2.next = 3;\n              break;\n            }\n\n            setAviso('Não foi possível recuperar as informações do candidato para procurar vagas.');\n            return _context2.abrupt(\"return\", showModalAviso());\n\n          case 3:\n            form = {\n              filter: vagafilter\n            };\n\n            if (!(form.filter.length === 0)) {\n              _context2.next = 7;\n              break;\n            }\n\n            setAviso('O campo de busca não pode estar vazio.');\n            return _context2.abrupt(\"return\", showModalAviso());\n\n          case 7:\n            initListar = {\n              headers: {\n                'Content-Type': 'application/json'\n              }\n            };\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(api.post(\"Vagas/buscar/vaga-filtro/usuario/\" + tokenUser.jti, form, initListar).then(function (resp) {\n              if (resp.status === 200) {}\n            }).catch(function (error) {\n              console.log(error.response);\n\n              if (error.response) {\n                setAviso(error.response.data);\n                return showModalAviso();\n              }\n            }));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getFonts = function getFonts() {\n    return Font.loadAsync({\n      'sansation-regular': require(\"../assets/fonts/Sansation_Regular.ttf\")\n    });\n  };\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      fontsLoaded = _useState18[0],\n      setFontsLoaded = _useState18[1];\n\n  if (fontsLoaded) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.boxTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, React.createElement(Image, {\n      style: styles.imageInscricao,\n      source: require(\"../assets/images/IconInscricao.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.textminhasInscricoes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Minhas Inscri\\xE7\\xF5es\")), React.createElement(View, {\n      style: styles.boxSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, React.createElement(TextInput, {\n      style: styles.inputSearch,\n      placeholder: \"Busque Vagas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.botaoSearch,\n      onPress: function onPress(event) {\n        event.preventDefault();\n        buscarVagas();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.textSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Buscar\"))), React.createElement(View, {\n      style: styles.modalVaga,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBFBFB'\n  },\n  boxTitle: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  imageInscricao: {\n    marginTop: 50,\n    height: 70,\n    width: 70\n  },\n  textminhasInscricoes: {\n    marginTop: 5,\n    fontSize: 18,\n    fontFamily: 'sansation-regular'\n  },\n  boxSearch: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 30,\n    marginHorizontal: 80,\n    backgroundColor: '#FFFFFF',\n    borderColor: '#bfbfbf',\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  inputSearch: {\n    fontSize: 15\n  },\n  botaoSearch: {\n    marginLeft: 10,\n    backgroundColor: 'red',\n    borderRadius: 5,\n    padding: 7\n  },\n  textSearch: {\n    color: 'white',\n    fontSize: 14\n  },\n  modalVaga: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    minHeight: 30\n  },\n  boxVaga: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: 30,\n    width: 250\n  }\n});\nexport default MinhasInscricoesCandidato;","map":{"version":3,"sources":["C:/Users/senai/Desktop/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/MinhasInscricoesCandidato.tsx"],"names":["React","useState","useEffect","Font","AppLoading","api","jwt","MinhasInscricoesCandidato","Vagas","setVagas","vagafilter","setVagaFilter","statusVaga","setStatusVaga","idStatusVaga","setIdStatusVaga","statusVagas","setStatusVagas","tokenUser","setTokenUser","TokenDecoder","token","tokenDecoded","showAviso","setShowAviso","showModalAviso","hideModalAviso","aviso","setAviso","Listar","initListar","headers","jti","get","then","resp","catch","erro","console","log","buscarVagas","form","filter","length","post","status","error","response","data","getFonts","loadAsync","require","fontsLoaded","setFontsLoaded","styles","container","boxTitle","imageInscricao","textminhasInscricoes","boxSearch","inputSearch","botaoSearch","event","preventDefault","textSearch","modalVaga","StyleSheet","create","flex","backgroundColor","display","flexDirection","alignItems","marginTop","height","width","fontSize","fontFamily","justifyContent","marginHorizontal","borderColor","borderStyle","borderWidth","borderRadius","marginLeft","padding","color","flexWrap","minHeight","boxVaga"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport { AppLoading } from 'expo';\r\nimport { View, StyleSheet, Image, TouchableOpacity, TextInput, Text } from 'react-native';\r\n//Api\r\nimport api from '../services/api';\r\n// Interfaces\r\nimport Token from '../interfaces/token';\r\n// Token Decoder\r\nimport jwt from '../services/tokenDecoder';\r\n//Page\r\nimport CardCandidato from '../../src/components/cardCandidato'\r\n\r\n\r\nfunction MinhasInscricoesCandidato() {\r\n\r\n    const [Vagas, setVagas] = useState([]);\r\n\r\n    //filtro para vagas\r\n    const [vagafilter, setVagaFilter] = useState('');\r\n\r\n    const [statusVaga, setStatusVaga] = useState('');\r\n    const [idStatusVaga, setIdStatusVaga] = useState('');\r\n    const [statusVagas, setStatusVagas] = useState([]);\r\n\r\n\r\n    \r\n    const [tokenUser, setTokenUser] = useState<Token | null>(null);\r\n\r\n    const TokenDecoder = (token: string) => {\r\n        // Token Decoder\r\n        let tokenDecoded = jwt(token);\r\n    \r\n        setTokenUser(tokenDecoded);\r\n      }\r\n\r\n    \r\n\r\n    // Modal\r\n    const [showAviso, setShowAviso] = useState(false);\r\n\r\n    // Função para mostrar modal\r\n    const showModalAviso = () => setShowAviso(true);\r\n\r\n    // Função para esconder modal\r\n    const hideModalAviso = () => setShowAviso(false);\r\n\r\n    // Avisos / Erros\r\n    const [aviso, setAviso] = useState('');\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        Listar();\r\n    }, []);\r\n\r\n    const initListar = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n    }\r\n\r\n    const Listar = async () => {\r\n\r\n        if (tokenUser.jti == null) {\r\n            setAviso('Não foi possível carregar as informações do candidato')\r\n            return showModalAviso();\r\n        }\r\n\r\n        await api\r\n            .get(`Inscricoes/usuario/${tokenUser.jti}`, initListar)\r\n            .then(resp => {\r\n                // setVagas(resp.data);\r\n            })\r\n            .catch(erro => console.log(erro))\r\n\r\n        await api\r\n            .get('Vagas/buscar-statusvaga', initListar)\r\n            .then(resp => {\r\n                // setStatusVagas(resp.data);\r\n            })\r\n            .catch(erro => console.log(erro))\r\n    }\r\n\r\n    const buscarVagas = async () => {\r\n        if (tokenUser == null) {\r\n            setAviso('Não foi possível recuperar as informações do candidato para procurar vagas.')\r\n            return showModalAviso();\r\n        }\r\n\r\n        const form = {\r\n            filter: vagafilter\r\n        }\r\n\r\n        if (form.filter.length === 0) {\r\n            setAviso('O campo de busca não pode estar vazio.')\r\n            return showModalAviso();\r\n        }\r\n\r\n\r\n        const initListar = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        await api\r\n            .post(`Vagas/buscar/vaga-filtro/usuario/${tokenUser.jti}`, form, initListar)\r\n            .then(resp => {\r\n                if (resp.status === 200) {\r\n                    // setVagas(resp.data);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response)\r\n                if (error.response) {\r\n                    setAviso(error.response.data)\r\n                    return showModalAviso();\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    //Funcao para pegar font\r\n    const getFonts = () => Font.loadAsync({\r\n        'sansation-regular': require('../assets/fonts/Sansation_Regular.ttf')\r\n    });\r\n\r\n    //funcao para setar a font\r\n    const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n    if (fontsLoaded) {\r\n\r\n        return (\r\n            <View style={styles.container}>\r\n\r\n                <View style={styles.boxTitle}>\r\n\r\n                    <Image style={styles.imageInscricao} source={require('../assets/images/IconInscricao.png')} />\r\n                    <Text style={styles.textminhasInscricoes}>Minhas Inscrições</Text>\r\n                </View>\r\n\r\n                <View style={styles.boxSearch}>\r\n                    <TextInput style={styles.inputSearch} placeholder=\"Busque Vagas\" />\r\n                    <TouchableOpacity style={styles.botaoSearch} onPress={event => {\r\n                        event.preventDefault();\r\n                        buscarVagas();\r\n                    }}>\r\n                        <Text style={styles.textSearch}>Buscar</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.modalVaga}>\r\n\r\n                    {/* {\r\n                        Vagas.map((item: any) => {\r\n                            return (\r\n                                <CardCandidato\r\n                                    nomeVaga={item.nomeVaga}\r\n                                    descricao={item.descricaoVaga}\r\n                                    vagaId={item.id}\r\n                                    vagaAtiva={item.vagaAtiva}\r\n                                    recebeuConvite={item.candidatoRecebeuConvite}\r\n                                />\r\n                            )\r\n                        })\r\n                    } */}\r\n                </View>\r\n\r\n                \r\n            </View>\r\n        );\r\n    } else {\r\n        return (\r\n\r\n            <AppLoading\r\n                startAsync={getFonts}\r\n                onFinish={() => setFontsLoaded(true)}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#FBFBFB',\r\n    },\r\n\r\n    boxTitle: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n\r\n    imageInscricao: {\r\n        marginTop: 50,\r\n        height: 70,\r\n        width: 70\r\n    },\r\n\r\n    textminhasInscricoes: {\r\n        marginTop: 5,\r\n        fontSize: 18,\r\n        fontFamily: 'sansation-regular',\r\n    },\r\n\r\n    boxSearch: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n\r\n        marginTop: 30,\r\n        marginHorizontal: 80,\r\n        backgroundColor: '#FFFFFF',\r\n\r\n        borderColor: '#bfbfbf',\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        borderRadius: 5,\r\n\r\n\r\n    },\r\n\r\n    inputSearch: {\r\n        fontSize: 15\r\n\r\n    },\r\n\r\n    botaoSearch: {\r\n        marginLeft: 10,\r\n        backgroundColor: 'red',\r\n        borderRadius: 5,\r\n        padding: 7\r\n    },\r\n\r\n    textSearch: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n    },\r\n\r\n    modalVaga: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        flexWrap: 'wrap',\r\n        minHeight: 30,\r\n    },\r\n\r\n    boxVaga: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        height: 30,\r\n        width:250\r\n    }\r\n})\r\n\r\nexport default MinhasInscricoesCandidato;"]},"metadata":{},"sourceType":"module"}