{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\Login.tsx\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'sansation-regular': require(\"../assets/fonts/Sansation_Regular.ttf\")\n  });\n};\n\nexport default function Login() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.logo,\n      source: require(\"../assets/images/LogoAppVermelho.png\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }), React.createElement(Text, {\n      style: styles.tlogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"Fa\\xE7a seu login\"), React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }\n    }), React.createElement(TextInput, {\n      style: styles.input,\n      secureTextEntry: true,\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }\n    }), React.createElement(TouchableOpacity, {\n      style: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }\n    }, \"Login\")), React.createElement(TouchableOpacity, {\n      style: styles.buttone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }\n    }, \"Esqueci minha senha\")), React.createElement(TouchableOpacity, {\n      style: styles.buttonc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }\n    }, \"cadastrar como candidato\")), React.createElement(TouchableOpacity, {\n      style: styles.buttonc,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }, React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, \"cadastrar como empresa\")));\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBFBFB',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    width: 250,\n    height: 90\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    margin: 10,\n    borderRadius: 15,\n    width: 250,\n    height: 35,\n    shadowColor: \"black\"\n  },\n  button: {\n    backgroundColor: '#D20003',\n    margin: 10,\n    borderRadius: 15,\n    width: 250,\n    height: 35\n  },\n  buttone: {\n    backgroundColor: '#016799',\n    margin: 10,\n    borderRadius: 15,\n    width: 250,\n    height: 35\n  },\n  buttonc: {\n    backgroundColor: '#ffff',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    borderColor: '#016799',\n    borderWidth: 3,\n    textDecorationColor: '#016799'\n  },\n  tlogin: {\n    textDecorationColor: '#505050',\n    fontFamily: 'sansation-regular'\n  }\n});","map":{"version":3,"sources":["C:/Users/senai/Desktop/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/Login.tsx"],"names":["React","useState","Font","AppLoading","getFonts","loadAsync","require","Login","fontsLoaded","setFontsLoaded","styles","container","logo","tlogin","input","button","buttone","buttonc","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","margin","borderRadius","shadowColor","borderColor","borderWidth","textDecorationColor","fontFamily"],"mappings":"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","sourcesContent":["\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport {AppLoading} from 'expo';\r\nimport { StyleSheet, Text, View , Image, TextInput , TouchableOpacity} from 'react-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'sansation-regular': require('../assets/fonts/Sansation_Regular.ttf')\r\n});\r\n\r\nexport default function Login() {\r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  if (fontsLoaded) {\r\n    return (\r\n      <View style={styles.container}>\r\n     \r\n      <Image \r\n       style={styles.logo}\r\n       source={require('../assets/images/LogoAppVermelho.png')}\r\n       />\r\n \r\n      <Text style={styles.tlogin}>Fa√ßa seu login</Text>\r\n     \r\n       <TextInput\r\n       style={styles.input}\r\n       placeholder=\"\"\r\n       />\r\n       \r\n       <TextInput\r\n       style={styles.input}\r\n       secureTextEntry={true}\r\n       placeholder=\"\"\r\n       />\r\n \r\n       <TouchableOpacity style={styles.button}>\r\n         <Text>\r\n           Login\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttone}>\r\n         <Text>\r\n           Esqueci minha senha\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttonc}>\r\n         <Text>\r\n           cadastrar como candidato\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttonc}>\r\n         <Text>\r\n           cadastrar como empresa\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n     </View>\r\n   );\r\n \r\n    \r\n  } else {\r\n    return (\r\n      <AppLoading \r\n        startAsync={getFonts} \r\n        onFinish={() => setFontsLoaded(true)} \r\n      />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FBFBFB',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  \r\n  logo: {\r\n    width:250,\r\n    height: 90,\r\n    //top: -150,\r\n  },\r\n\r\n  input: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35,\r\n    shadowColor: \"black\",\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: '#D20003',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35\r\n  },\r\n\r\n  buttone: {\r\n    backgroundColor: '#016799',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35\r\n  },\r\n\r\n  buttonc: {\r\n    backgroundColor: '#ffff',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 200,\r\n    height:35,\r\n    borderColor: '#016799',\r\n    borderWidth: 3,\r\n    textDecorationColor: '#016799'\r\n  },\r\n\r\n  tlogin: {\r\n    textDecorationColor: '#505050',\r\n    fontFamily: 'sansation-regular'\r\n    \r\n    \r\n  }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}