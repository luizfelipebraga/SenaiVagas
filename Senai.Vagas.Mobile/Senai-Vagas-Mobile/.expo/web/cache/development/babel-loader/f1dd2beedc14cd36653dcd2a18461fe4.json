{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Senai\\\\ReactNative\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\components\\\\cardCandidatoHome.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar cardCandidatoHome = function cardCandidatoHome(_ref) {\n  var nomeVaga = _ref.nomeVaga,\n      descricao = _ref.descricao,\n      vagaId = _ref.vagaId,\n      vagaAtiva = _ref.vagaAtiva;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeEmpresa = _useState2[0],\n      setNomeEmpresa = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tipoExperiencia = _useState4[0],\n      setExperiencia = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cargo = _useState6[0],\n      setCargo = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      faixaSalarial = _useState8[0],\n      setFaixaSalarial = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      nomeMunicipio = _useState10[0],\n      setNomeMunicipio = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ufSigla = _useState12[0],\n      setUfSigla = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      dataEncerramento = _useState14[0],\n      setDataEncerramento = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      areaVagaRecomendadas = _useState16[0],\n      setAreaVagaRecomendadas = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showAviso = _useState18[0],\n      setShowAviso = _useState18[1];\n\n  var showModalAviso = function showModalAviso() {\n    return setShowAviso(true);\n  };\n\n  var hideModalAviso = function hideModalAviso() {\n    return setShowAviso(false);\n  };\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      aviso = _useState20[0],\n      setAviso = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      show = _useState22[0],\n      setShow = _useState22[1];\n\n  var handleClose = function handleClose() {\n    return setShow(false);\n  };\n\n  var handleShow = function handleShow() {\n    return setShow(true);\n  };\n\n  var Botoes = function Botoes(vagaId) {\n    if (vagaAtiva) {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.botoes,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.btnAzul,\n        onPress: function onPress(event) {\n          event.preventDefault();\n          handleShow();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }\n      }, \"Ver Mais\"))));\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.cardTeste,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.titulo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.nomeVaga,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, nomeVaga), React.createElement(View, {\n    style: styles.sectionVaga,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, vagaAtiva ? React.createElement(Text, {\n    style: styles.vagaAtiva,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Vaga Ativa\") : React.createElement(Text, {\n    style: styles.vagaEncerrada,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 84\n    }\n  }, \"Vaga Encerrada\"))), React.createElement(View, {\n    style: styles.textos,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, descricao.length > 300 ? descricao.substring(0, 300) + \" [...]\" : descricao)), Botoes(vagaId));\n};\n\nvar styles = StyleSheet.create({\n  botoes: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    marginHorizontal: 3,\n    marginBottom: 2\n  },\n  btnAzul: {\n    backgroundColor: '#ffffff',\n    color: '#016799',\n    borderColor: '#016799'\n  },\n  btnVermelho: {},\n  textVermais: {},\n  cardTeste: {\n    marginTop: 3,\n    width: 45,\n    minHeight: 100,\n    borderRadius: 10,\n    marginHorizontal: 5\n  },\n  titulo: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginHorizontal: 3,\n    marginTop: 2\n  },\n  nomeVaga: {\n    color: '#303030'\n  },\n  sectionVaga: {},\n  vagaAtiva: {\n    color: '#016799',\n    marginLeft: 0\n  },\n  vagaEncerrada: {\n    color: '#df0003',\n    marginLeft: 0\n  },\n  textos: {\n    display: 'flex',\n    textAlign: 'justify',\n    marginHorizontal: 3,\n    color: '#606060'\n  }\n});\nexport default cardCandidatoHome;","map":{"version":3,"sources":["C:/Users/Felipe/Desktop/Senai/ReactNative/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/components/cardCandidatoHome.tsx"],"names":["React","useState","cardCandidatoHome","nomeVaga","descricao","vagaId","vagaAtiva","nomeEmpresa","setNomeEmpresa","tipoExperiencia","setExperiencia","cargo","setCargo","faixaSalarial","setFaixaSalarial","nomeMunicipio","setNomeMunicipio","ufSigla","setUfSigla","dataEncerramento","setDataEncerramento","areaVagaRecomendadas","setAreaVagaRecomendadas","showAviso","setShowAviso","showModalAviso","hideModalAviso","aviso","setAviso","show","setShow","handleClose","handleShow","Botoes","styles","botoes","btnAzul","event","preventDefault","cardTeste","titulo","sectionVaga","vagaEncerrada","textos","length","substring","StyleSheet","create","display","alignItems","justifyContent","marginHorizontal","marginBottom","backgroundColor","color","borderColor","btnVermelho","textVermais","marginTop","width","minHeight","borderRadius","marginLeft","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Button, TouchableOpacity } from 'react-native';\r\n\r\nimport jwt from '../services/tokenDecoder';\r\nimport api from '../services/api';\r\n\r\ninterface CardProps {\r\n    nomeVaga: string;\r\n    descricao: string;\r\n    vagaAtiva: Boolean;\r\n    vagaId: number;\r\n}\r\n\r\n\r\nconst cardCandidatoHome: React.FC<CardProps> = ({ nomeVaga, descricao, vagaId, vagaAtiva }) => {\r\n\r\n\r\n    //token do usuario\r\n    // let tokenDecoded = jwt();\r\n\r\n    // Dados estáticos\r\n    const [nomeEmpresa, setNomeEmpresa] = useState('');\r\n    const [tipoExperiencia, setExperiencia] = useState('');\r\n    const [cargo, setCargo] = useState('');\r\n    const [faixaSalarial, setFaixaSalarial] = useState('');\r\n\r\n    const [nomeMunicipio, setNomeMunicipio] = useState('');\r\n    const [ufSigla, setUfSigla] = useState<any>({});\r\n\r\n    const [dataEncerramento, setDataEncerramento] = useState('');\r\n    const [areaVagaRecomendadas, setAreaVagaRecomendadas] = useState([]);\r\n\r\n    // Modal\r\n    const [showAviso, setShowAviso] = useState(false);\r\n\r\n    // Função para mostrar modal\r\n    const showModalAviso = () => setShowAviso(true);\r\n\r\n    // Função para esconder modal\r\n    const hideModalAviso = () => setShowAviso(false);\r\n\r\n    // Avisos / Erros\r\n    const [aviso, setAviso] = useState('');\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    // const VerMais = async (vagaId: number) => {\r\n    //     if (tokenDecoded == null) {\r\n    //         setAviso('Não foi possível carregar as informações do candidato')\r\n    //         return showModalAviso();\r\n    //     }\r\n\r\n    //     const initListar = {\r\n    //         headers: {\r\n    //             'Content-Type': 'application/json'\r\n    //         },\r\n    //     }\r\n\r\n    //     await api\r\n    //         .get(`Vagas/buscar/vaga/${vagaId}`, initListar)\r\n    //         .then(resp => {\r\n    //             setNomeEmpresa(resp.data.nomeEmpresa);\r\n    //             setExperiencia(resp.data.tipoExperiencia.descricao);\r\n    //             setCargo(resp.data.cargo);\r\n    //             setFaixaSalarial(resp.data.faixaSalarial.descricao);\r\n    //             setNomeMunicipio(resp.data.municipio.descricao);\r\n    //             setUfSigla(resp.data.municipio.ufSigla);\r\n    //             setDataEncerramento(new Date(resp.data.dataEncerramento).toLocaleDateString('pt-BR', { timeZone: 'UTC' }));\r\n    //             setAreaVagaRecomendadas(resp.data.areaVagaRecomendadas);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             if (error.response) {\r\n    //                 setAviso(error.response.data)\r\n    //                 return showModalAviso();\r\n    //             }\r\n    //         })\r\n    // }\r\n\r\n    const Botoes = (vagaId: number) => {\r\n        if (vagaAtiva) {\r\n            return (\r\n                <View>\r\n                    <View style={styles.botoes}>\r\n                        <TouchableOpacity style={styles.btnAzul} onPress={event => {\r\n                            event.preventDefault();\r\n                            // VerMais(vagaId);\r\n                            handleShow();\r\n                        }}><Text>Ver Mais</Text></TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <View style={styles.cardTeste}>\r\n            <View style={styles.titulo}>\r\n                <Text style={styles.nomeVaga}>{nomeVaga}</Text>\r\n\r\n                <View style={styles.sectionVaga}>\r\n                {\r\n                    vagaAtiva ? <Text style={styles.vagaAtiva}>Vaga Ativa</Text> : <Text style={styles.vagaEncerrada}>Vaga Encerrada</Text>\r\n                }\r\n                </View>\r\n\r\n            </View>\r\n\r\n                <View style={styles.textos}>\r\n                    <Text>{descricao.length > 300 ? descricao.substring(0, 300) + \" [...]\" : descricao}</Text>\r\n                </View>\r\n\r\n                {\r\n                    Botoes(vagaId)\r\n                }\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    botoes : {\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal : 3,\r\n        marginBottom: 2,\r\n    },\r\n    \r\n    btnAzul : {\r\n        backgroundColor: '#ffffff',\r\n        color: '#016799',\r\n        borderColor: '#016799',\r\n    },\r\n\r\n    btnVermelho : {\r\n\r\n    },\r\n\r\n    textVermais:{\r\n\r\n    },\r\n\r\n    cardTeste : {\r\n        marginTop: 3,\r\n        width: 45,\r\n        minHeight: 100,\r\n        borderRadius: 10,\r\n        marginHorizontal: 5\r\n    },\r\n\r\n    titulo : {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginHorizontal: 3,\r\n        marginTop: 2\r\n        \r\n    },\r\n\r\n    nomeVaga : {\r\n        color: '#303030',\r\n    },\r\n\r\n    sectionVaga :{\r\n\r\n    },\r\n\r\n    vagaAtiva : {\r\n        color: '#016799',\r\n        marginLeft: 0\r\n    },\r\n\r\n    vagaEncerrada : {\r\n        color: '#df0003',\r\n        marginLeft: 0\r\n    },\r\n\r\n    textos : {\r\n        display: 'flex',\r\n        textAlign: 'justify',\r\n        marginHorizontal: 3,\r\n        color: '#606060',\r\n    },\r\n})\r\n\r\nexport default cardCandidatoHome;"]},"metadata":{},"sourceType":"module"}