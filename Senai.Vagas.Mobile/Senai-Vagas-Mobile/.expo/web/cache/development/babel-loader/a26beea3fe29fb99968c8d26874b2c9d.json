{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Felipe\\\\Desktop\\\\Senai\\\\ReactNative\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\context\\\\auth.tsx\";\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport jwt from \"../services/tokenDecoder\";\nimport api from \"../services/api\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nvar AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLogged = _useState2[0],\n      setIsLogged = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCandidato = _useState4[0],\n      setIsCandidato = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEmpresa = _useState6[0],\n      setIsEmpresa = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isAdmin = _useState8[0],\n      setIsAdmin = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      tokenDecoded = _useState10[0],\n      setTokenDecoded = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      senha = _useState14[0],\n      setSenha = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isLoading = _useState16[0],\n      setIsLoading = _useState16[1];\n\n  useEffect(function () {\n    Logged();\n  }, []);\n\n  var Logged = function Logged() {\n    var response;\n    return _regeneratorRuntime.async(function Logged$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token-usuario'));\n\n          case 2:\n            response = _context.sent;\n            userLogged(response);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var userLogged = function userLogged(response) {\n    var _tokenDecoded;\n\n    return _regeneratorRuntime.async(function userLogged$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!response) {\n              setIsLogged(false);\n              setIsAdmin(false);\n              setIsCandidato(false);\n              setIsEmpresa(false);\n              setIsLoading(false);\n            } else {\n              setIsLogged(true);\n              _tokenDecoded = jwt(response);\n\n              if ((_tokenDecoded == null ? void 0 : _tokenDecoded.role) === \"1\") {\n                setIsAdmin(false), setIsCandidato(true), setIsEmpresa(false);\n              } else if ((_tokenDecoded == null ? void 0 : _tokenDecoded.role) === \"2\") {\n                setIsAdmin(false), setIsCandidato(false), setIsEmpresa(true);\n              } else if ((_tokenDecoded == null ? void 0 : _tokenDecoded.role) === \"3\") {\n                setIsAdmin(true), setIsCandidato(false), setIsEmpresa(false);\n              }\n\n              console.log(_tokenDecoded);\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var Login = function Login(form) {\n    var init, login;\n    return _regeneratorRuntime.async(function Login$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            init = {\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(form)\n            };\n            login = {\n              email: email,\n              senha: senha\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(api.post('Login', login, init).then(function (resp) {\n              if (resp.data.token !== undefined) {\n                AsyncStorage.setItem('token-usuario', resp.data.token);\n                userLogged(resp.data.token);\n              } else {\n                setIsLogged(false);\n                setIsAdmin(false);\n                setIsCandidato(false);\n                Alert.alert(resp.data);\n              }\n            }).catch(function (error) {\n              console.log('ERROR em logar: ' + error.message);\n            }));\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var Logout = function Logout() {\n    return _regeneratorRuntime.async(function Logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear().then(function () {\n              setIsLogged(false);\n              setIsAdmin(false);\n              setIsCandidato(false);\n              setIsEmpresa(false);\n              setTokenDecoded(null);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      logged: isLogged,\n      IsAdmin: isAdmin,\n      IsCandidato: isCandidato,\n      IsEmpresa: isEmpresa,\n      IsLoading: isLoading,\n      token: tokenDecoded,\n      Login: Login,\n      Logout: Logout\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["C:/Users/Felipe/Desktop/Senai/ReactNative/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/context/auth.tsx"],"names":["React","createContext","useState","useEffect","AsyncStorage","jwt","api","AuthContext","AuthProvider","children","isLogged","setIsLogged","isCandidato","setIsCandidato","isEmpresa","setIsEmpresa","isAdmin","setIsAdmin","tokenDecoded","setTokenDecoded","email","setEmail","senha","setSenha","isLoading","setIsLoading","Logged","getItem","response","userLogged","role","console","log","Login","form","init","headers","body","JSON","stringify","login","post","then","resp","data","token","undefined","setItem","Alert","alert","catch","error","message","Logout","clear","logged","IsAdmin","IsCandidato","IsEmpresa","IsLoading"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAGA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,OAAOC,GAAP;AAGA,OAAOC,GAAP;;AAoBA,IAAMC,WAAW,GAAGN,aAAa,CAAkB,EAAlB,CAAjC;AAGA,OAAO,IAAMO,YAAsB,GAAG,SAAzBA,YAAyB,OAAuB;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;;AAAA,kBACzBP,QAAQ,CAAC,KAAD,CADiB;AAAA;AAAA,MAClDQ,QADkD;AAAA,MACxCC,WADwC;;AAAA,mBAEnBT,QAAQ,CAAC,KAAD,CAFW;AAAA;AAAA,MAElDU,WAFkD;AAAA,MAErCC,cAFqC;;AAAA,mBAGvBX,QAAQ,CAAC,KAAD,CAHe;AAAA;AAAA,MAGlDY,SAHkD;AAAA,MAGvCC,YAHuC;;AAAA,mBAI3Bb,QAAQ,CAAC,KAAD,CAJmB;AAAA;AAAA,MAIlDc,OAJkD;AAAA,MAIzCC,UAJyC;;AAAA,mBAKjBf,QAAQ,CAAgB,IAAhB,CALS;AAAA;AAAA,MAKlDgB,YALkD;AAAA,MAKpCC,eALoC;;AAAA,oBAO/BjB,QAAQ,CAAC,EAAD,CAPuB;AAAA;AAAA,MAOlDkB,KAPkD;AAAA,MAO3CC,QAP2C;;AAAA,oBAQ/BnB,QAAQ,CAAC,EAAD,CARuB;AAAA;AAAA,MAQlDoB,KARkD;AAAA,MAQ3CC,QAR2C;;AAAA,oBAUvBrB,QAAQ,CAAC,IAAD,CAVe;AAAA;AAAA,MAUlDsB,SAVkD;AAAA,MAUvCC,YAVuC;;AAYzDtB,EAAAA,SAAS,CAAC,YAAM;AACZuB,IAAAA,MAAM;AACT,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMA,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYtB,YAAY,CAACuB,OAAb,CAAqB,eAArB,CADZ;;AAAA;AACLC,YAAAA,QADK;AAEXC,YAAAA,UAAU,CAACD,QAAD,CAAV;;AAFW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAKA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAOD,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGf,gBAAI,CAACA,QAAL,EAAe;AACXjB,cAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,cAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAU,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,aAND,MAOK;AACDd,cAAAA,WAAW,CAAC,IAAD,CAAX;AAGIO,cAAAA,aAJH,GAIkBb,GAAG,CAACuB,QAAD,CAJrB;;AAOD,kBAAI,CAAAV,aAAY,QAAZ,YAAAA,aAAY,CAAEY,IAAd,MAAuB,GAA3B,EAAgC;AAC3Bb,gBAAAA,UAAU,CAAC,KAAD,CAAV,EAAmBJ,cAAc,CAAC,IAAD,CAAjC,EAAyCE,YAAY,CAAC,KAAD,CAAtD;AACH,eAFD,MAIK,IAAI,CAAAG,aAAY,QAAZ,YAAAA,aAAY,CAAEY,IAAd,MAAuB,GAA3B,EAAgC;AAChCb,gBAAAA,UAAU,CAAC,KAAD,CAAV,EAAmBJ,cAAc,CAAC,KAAD,CAAjC,EAA0CE,YAAY,CAAC,IAAD,CAAvD;AACH,eAFI,MAIA,IAAI,CAAAG,aAAY,QAAZ,YAAAA,aAAY,CAAEY,IAAd,MAAuB,GAA3B,EAAgC;AAChCb,gBAAAA,UAAU,CAAC,IAAD,CAAV,EAAkBJ,cAAc,CAAC,KAAD,CAAhC,EAAyCE,YAAY,CAAC,KAAD,CAAtD;AACH;;AACDgB,cAAAA,OAAO,CAACC,GAAR,CAAYd,aAAZ;AACH;;AA7Bc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAiCA,MAAMe,KAAK,GAAG,SAARA,KAAQ,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACJC,YAAAA,IADI,GACG;AACTC,cAAAA,OAAO,EAAE;AACL,gCAAgB;AADX,eADA;AAITC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAJG,aADH;AAQJM,YAAAA,KARI,GAQI;AACVpB,cAAAA,KAAK,EAAEA,KADG;AAEVE,cAAAA,KAAK,EAAEA;AAFG,aARJ;AAAA;AAAA,6CAgBJhB,GAAG,CAACmC,IAAJ,CAAS,OAAT,EAAkBD,KAAlB,EAAyBL,IAAzB,EACDO,IADC,CACI,UAAAC,IAAI,EAAI;AAEV,kBAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,KAAoBC,SAAxB,EAAmC;AAC/B1C,gBAAAA,YAAY,CAAC2C,OAAb,CAAqB,eAArB,EAAsCJ,IAAI,CAACC,IAAL,CAAUC,KAAhD;AACAhB,gBAAAA,UAAU,CAACc,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAV;AAEH,eAJD,MAKK;AAEDlC,gBAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,gBAAAA,cAAc,CAAC,KAAD,CAAd;AAGAmC,gBAAAA,KAAK,CAACC,KAAN,CAAYN,IAAI,CAACC,IAAjB;AACH;AACJ,aAjBC,EAkBDM,KAlBC,CAkBK,UAAAC,KAAK,EAAI;AACZpB,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBmB,KAAK,CAACC,OAAvC;AACH,aApBC,CAhBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAuCA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACLjD,YAAY,CAACkD,KAAb,GACDZ,IADC,CACI,YAAM;AACR/B,cAAAA,WAAW,CAAC,KAAD,CAAX;AACAM,cAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,cAAAA,cAAc,CAAC,KAAD,CAAd;AACAE,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,cAAAA,eAAe,CAAC,IAAD,CAAf;AACH,aAPC,CADK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAWA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEoC,MAAAA,MAAM,EAAE7C,QAAV;AAAoB8C,MAAAA,OAAO,EAAExC,OAA7B;AAAsCyC,MAAAA,WAAW,EAAE7C,WAAnD;AAAgE8C,MAAAA,SAAS,EAAE5C,SAA3E;AAAsF6C,MAAAA,SAAS,EAAEnC,SAAjG;AAA4GqB,MAAAA,KAAK,EAAE3B,YAAnH;AAAiIe,MAAAA,KAAK,EAALA,KAAjI;AAAwIoB,MAAAA,MAAM,EAANA;AAAxI,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK5C,QADL,CADJ;AAKH,CA9GM;AAgHP,eAAeF,WAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// AsyncStorage (\"localStorage\" do react native)\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Token Decoder Service\r\nimport jwt from '../services/tokenDecoder';\r\n\r\n//importacao da api\r\nimport api from '../services/api';\r\n\r\n// Interfaces\r\nimport LoginProps from '../interfaces/login';\r\n\r\n// Outras bibliotecas\r\nimport { Alert } from 'react-native';\r\n\r\n\r\ninterface AuthContextData {\r\n    logged: boolean,\r\n    IsCandidato: boolean,\r\n    IsEmpresa: boolean,\r\n    IsAdmin: boolean,\r\n    IsLoading: boolean,\r\n    token: object | null,\r\n    Login(form: LoginProps): Promise<void>,\r\n    Logout(): Promise<void>,\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\n// Exportando AuthProvider para se rusado no routes\r\nexport const AuthProvider: React.FC = ({ children }: any) => {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n    const [isCandidato, setIsCandidato] = useState(false);\r\n    const [isEmpresa, setIsEmpresa] = useState(false);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [tokenDecoded, setTokenDecoded] = useState<object | null>(null);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Logged();\r\n    }, []);\r\n\r\n    // Função assíncrona para adquirir atributo que esta guardado no \"AsyncStorage\"\r\n    const Logged = async () => {\r\n        const response = await AsyncStorage.getItem('token-usuario');\r\n        userLogged(response);\r\n    }\r\n\r\n    const userLogged = async (response: any) => {\r\n\r\n        // Muda o estado de 'isLogged' caso usuário esteja ou não autenticado\r\n        if (!response) {\r\n            setIsLogged(false)\r\n            setIsAdmin(false)\r\n            setIsCandidato(false)\r\n            setIsEmpresa(false)\r\n            setIsLoading(false)\r\n        }\r\n        else {\r\n            setIsLogged(true)\r\n\r\n            // Token Decoder\r\n            let tokenDecoded = jwt(response);\r\n\r\n            // Muda o estado dos tipos de usuario\r\n            if (tokenDecoded?.role === \"1\") {\r\n                (setIsAdmin(false), setIsCandidato(true), setIsEmpresa(false));\r\n            }\r\n\r\n            else if (tokenDecoded?.role === \"2\") {\r\n                (setIsAdmin(false), setIsCandidato(false), setIsEmpresa(true));\r\n            }\r\n\r\n            else if (tokenDecoded?.role === \"3\") {\r\n                (setIsAdmin(true), setIsCandidato(false), setIsEmpresa(false));\r\n            }\r\n            console.log(tokenDecoded)\r\n        }\r\n    }\r\n\r\n\r\n    const Login = async (form: LoginProps) => {\r\n        const init = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(form),\r\n        };\r\n\r\n        const login = {\r\n            email: email,\r\n            senha: senha\r\n        }\r\n\r\n        // Se você estiver executando o servidor e o emulador em seu computador, 127.0.0.1:(port) fará referência ao emulador em si e não ao servidor.\r\n        // O 10.0.2.2 é a solução para esse problema \r\n        // (atualmente utilizando o IP da maquina para aplicação mobile com EXPO)\r\n        await api.post('Login', login, init)\r\n            .then(resp => {\r\n                // Verifica se a propriedade token é diferente de indefinida (se a propriedade existe no retorno do json)\r\n                if (resp.data.token !== undefined) {\r\n                    AsyncStorage.setItem('token-usuario', resp.data.token);\r\n                    userLogged(resp.data.token);\r\n\r\n                }\r\n                else {\r\n                    // Erro caso email ou senha sejam inválidos\r\n                    setIsLogged(false);\r\n                    setIsAdmin(false);\r\n                    setIsCandidato(false);\r\n\r\n                    // Retorna para a tela de Login o erro do backend\r\n                    Alert.alert(resp.data);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log('ERROR em logar: ' + error.message);\r\n            });\r\n    }\r\n\r\n    const Logout = async () => {\r\n        await AsyncStorage.clear()\r\n            .then(() => {\r\n                setIsLogged(false);\r\n                setIsAdmin(false);\r\n                setIsCandidato(false);\r\n                setIsEmpresa(false);\r\n                setTokenDecoded(null);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ logged: isLogged, IsAdmin: isAdmin, IsCandidato: isCandidato, IsEmpresa: isEmpresa, IsLoading: isLoading, token: tokenDecoded, Login, Logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default AuthContext;"]},"metadata":{},"sourceType":"module"}