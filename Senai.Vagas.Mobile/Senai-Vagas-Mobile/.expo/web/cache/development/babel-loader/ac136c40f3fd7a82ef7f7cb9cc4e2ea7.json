{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\login\\\\Login.tsx\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'sansation-regular': require(\"../../assets/fonts/Sansation_Regular.ttf\")\n  });\n};\n\nexport default function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  var login = function login() {\n    var form = {\n      email: email,\n      senha: senha\n    };\n\n    if (form.email.length === 0 || form.senha.length === 0) {\n      return Alert.alert('Preencha os campos de email e senha corretamente.');\n    }\n\n    var init = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(form)\n    };\n    fetch('http://wolfrosfay4-001-site1.btempurl.com/api/login', init).then(function (resp) {\n      return resp.json();\n    }).then(function (data) {\n      if (data.token !== undefined) {\n        AsyncStorage.setItem('token-usuario', data.token);\n        console.log('token: ' + data.token);\n      } else {\n        Alert.alert(data);\n      }\n    }).catch(function (erro) {\n      return console.log(erro);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, React.createElement(Image, {\n    style: styles.logo,\n    source: require(\"../../assets/images/LogoAppVermelho.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 8\n    }\n  })), React.createElement(Text, {\n    style: styles.tlogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Fa\\xE7a seu login\"), React.createElement(Text, {\n    style: styles.ti,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"\",\n    onChangeText: function onChangeText(e) {\n      return setEmail(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }), React.createElement(Text, {\n    style: styles.ti,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  }, \"Senha\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    placeholder: \"\",\n    onChangeText: function onChangeText(e) {\n      return setSenha(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress(event) {\n      event.preventDefault();\n      login();\n    },\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.tloginnn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.buttone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.tloginnn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }, \"Esqueci minha senha\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.tloginn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }\n  }, \"cadastrar como candidato\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: styles.tloginn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 12\n    }\n  }, \"cadastrar como empresa\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FBFBFB',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 860\n  },\n  logo: {\n    width: 220,\n    height: 60\n  },\n  input: {\n    backgroundColor: '#FFFFFF',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.3\n  },\n  button: {\n    backgroundColor: '#D20003',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center'\n  },\n  buttone: {\n    backgroundColor: '#016799',\n    margin: 10,\n    borderRadius: 15,\n    width: 200,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center'\n  },\n  buttonc: {\n    backgroundColor: '#ffff',\n    margin: 10,\n    borderRadius: 15,\n    width: 150,\n    height: 35,\n    textAlign: \"center\",\n    justifyContent: 'center',\n    shadowOffset: {\n      width: 2,\n      height: 2\n    },\n    shadowColor: 'black',\n    shadowOpacity: 0.3,\n    fontSize: 12\n  },\n  tlogin: {\n    textDecorationColor: '#505050',\n    fontFamily: 'sansation-regular'\n  },\n  ti: {\n    marginRight: 150,\n    textDecorationColor: '#505050',\n    fontFamily: 'sansation-regular'\n  },\n  tloginn: {\n    color: '#016799',\n    fontFamily: 'sansation-regular'\n  },\n  tloginnn: {\n    fontFamily: 'sansation-regular',\n    color: '#E0E0E0'\n  }\n});","map":{"version":3,"sources":["C:/Users/senai/Desktop/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/login/Login.tsx"],"names":["React","useState","Font","AsyncStorage","getFonts","loadAsync","require","Login","email","setEmail","senha","setSenha","login","form","length","Alert","alert","init","method","headers","body","JSON","stringify","fetch","then","resp","json","data","token","undefined","setItem","console","log","catch","erro","styles","container","logo","tlogin","ti","input","e","event","preventDefault","button","tloginnn","buttone","buttonc","tloginn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","width","margin","borderRadius","shadowOffset","shadowColor","shadowOpacity","textAlign","fontSize","textDecorationColor","fontFamily","marginRight","color"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport {AppLoading} from 'expo';\r\nimport { StyleSheet, Text, View , Image, TextInput , TouchableOpacity, AsyncStorage, Alert} from 'react-native';\r\nimport { useHistory } from 'react-router-native';\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'sansation-regular': require('../../assets/fonts/Sansation_Regular.ttf')\r\n});\r\n\r\nexport default function Login() {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');\r\n  \r\n  const login = () => {\r\n      const form = {\r\n          email: email,\r\n          senha: senha,\r\n      };\r\n\r\n      if (form.email.length === 0 || form.senha.length === 0) {\r\n          return Alert.alert('Preencha os campos de email e senha corretamente.');\r\n      }\r\n\r\n      const init = {\r\n          method: 'post',\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(form),\r\n      };\r\n\r\n      // Se você estiver executando o servidor e o emulador em seu computador, 127.0.0.1:(port) fará referência ao emulador em si e não ao servidor.\r\n      // O 10.0.2.2 é a solução para esse problema \r\n      // (atualmente utilizando o IP da maquina para aplicação mobile com EXPO)\r\n      fetch('http://wolfrosfay4-001-site1.btempurl.com/api/login', init)\r\n          .then(resp => resp.json())\r\n          .then(data => {\r\n              // Verifica se a propriedade token é diferente de indefinida (se a propriedade existe no retorno do json)\r\n              if (data.token !== undefined) {\r\n                  AsyncStorage.setItem('token-usuario', data.token)\r\n                  console.log('token: ' + data.token)\r\n              }\r\n              else {\r\n                  // Erro caso email ou senha sejam inválidos\r\n                  Alert.alert(data);\r\n              }\r\n          })\r\n          .catch(erro => console.log(erro));\r\n  };\r\n\r\n      return (\r\n        <View style={styles.container}>\r\n       <View>\r\n       <Image \r\n         style={styles.logo}\r\n         source={require('../../assets/images/LogoAppVermelho.png')}\r\n         />\r\n       </View>\r\n        \r\n        <Text style={styles.tlogin}>Faça seu login</Text>\r\n        \r\n        <Text style={styles.ti}>Email</Text>\r\n         <TextInput\r\n         style={styles.input}\r\n         placeholder=\"\"\r\n         onChangeText={(e: any) => setEmail(e)}\r\n         />\r\n  \r\n         <Text style={styles.ti}>Senha</Text>\r\n         <TextInput\r\n         style={styles.input}\r\n         secureTextEntry={true}\r\n         placeholder=\"\"\r\n         onChangeText={(e: any) => setSenha(e)}\r\n         />\r\n   \r\n         <TouchableOpacity  onPress={event => {\r\n                        event.preventDefault();\r\n                        login();\r\n                    }} style={styles.button}>\r\n           <Text style={styles.tloginnn}>\r\n             Login\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttone}>\r\n           <Text style={styles.tloginnn}>\r\n             Esqueci minha senha\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttonc}>\r\n           <Text style={styles.tloginn}>\r\n             cadastrar como candidato\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n         <TouchableOpacity style={styles.buttonc}>\r\n           <Text style={styles.tloginn}>\r\n             cadastrar como empresa\r\n           </Text>\r\n         </TouchableOpacity>\r\n   \r\n       </View>\r\n     );\r\n   \r\n      \r\n                  }\r\n  \r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: '#FBFBFB',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: 860,\r\n      \r\n    },\r\n    \r\n    logo: {\r\n      width:220,\r\n      height: 60,\r\n     \r\n    },\r\n  \r\n    input: {\r\n      backgroundColor: '#FFFFFF',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      shadowOffset:{  width: 2,  height: 2,  },\r\n      shadowColor: 'black',\r\n      shadowOpacity: 0.3,\r\n    },\r\n  \r\n    button: {\r\n      backgroundColor: '#D20003',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n      \r\n    },\r\n  \r\n    buttone: {\r\n      backgroundColor: '#016799',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 200,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n  \r\n    },\r\n  \r\n    buttonc: {\r\n      backgroundColor: '#ffff',\r\n      margin: 10,\r\n      borderRadius: 15,\r\n      width: 150,\r\n      height:35,\r\n      textAlign: \"center\",\r\n      justifyContent: 'center',\r\n      shadowOffset:{  width: 2,  height: 2,  },\r\n      shadowColor: 'black',\r\n      shadowOpacity: 0.3,\r\n      fontSize: 12\r\n      \r\n  \r\n    },\r\n  \r\n    tlogin: {\r\n      textDecorationColor: '#505050',\r\n      fontFamily: 'sansation-regular'\r\n    },\r\n  \r\n    ti:{\r\n      marginRight: 150,\r\n      textDecorationColor: '#505050',\r\n      fontFamily: 'sansation-regular'\r\n    },\r\n  \r\n    tloginn: {\r\n      color: '#016799',\r\n      fontFamily: 'sansation-regular'\r\n    },\r\n    tloginnn:{\r\n      fontFamily: 'sansation-regular',\r\n      color:'#E0E0E0'\r\n    }\r\n  });\r\n  \r\n"]},"metadata":{},"sourceType":"module"}