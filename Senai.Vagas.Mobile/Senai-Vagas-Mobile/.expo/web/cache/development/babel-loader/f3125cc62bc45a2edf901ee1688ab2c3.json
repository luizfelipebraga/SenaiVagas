{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\senai\\\\Desktop\\\\Senai.Vagas.Mobile\\\\Senai-Vagas-Mobile\\\\src\\\\screens\\\\Login.tsx\";\nimport React, { useState } from 'react';\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport api from \"../services/api\";\nimport { StackActions, NavigationActions } from 'react-navigation';\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'sansation-regular': require(\"../assets/fonts/Sansation_Regular.ttf\")\n  });\n};\n\nexport default function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  function saveUser(user) {\n    return _regeneratorRuntime.async(function saveUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('@ListApp:userToken', JSON.stringify(user)));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function login() {\n    var credentials, response, user, resetAction, _useState9, _useState10, fontsLoaded, setFontsLoaded;\n\n    return _regeneratorRuntime.async(function login$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(username.length === 0)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context2.prev = 3;\n            credentials = {\n              email: username,\n              password: password\n            };\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(api.post('/sessions', credentials));\n\n          case 7:\n            response = _context2.sent;\n            user = response.data;\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(saveUser(user));\n\n          case 11:\n            resetAction = StackActions.reset({\n              index: 0,\n              actions: [NavigationActions.navigate({\n                routeName: 'App'\n              })]\n            });\n            setLoading(false);\n            props.navigation.dispatch(resetAction);\n            _context2.next = 21;\n            break;\n\n          case 16:\n            _context2.prev = 16;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.log(_context2.t0);\n            setLoading(false);\n            setErrorMessage('Usuário não existe');\n\n          case 21:\n            _useState9 = useState(false), _useState10 = _slicedToArray(_useState9, 2), fontsLoaded = _useState10[0], setFontsLoaded = _useState10[1];\n\n            if (!fontsLoaded) {\n              _context2.next = 26;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", React.createElement(View, {\n              style: styles.container,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 7\n              }\n            }, React.createElement(View, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 6\n              }\n            }, React.createElement(Image, {\n              style: styles.logo,\n              source: require(\"../assets/images/LogoAppVermelho.png\"),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 6\n              }\n            })), React.createElement(Text, {\n              style: styles.tlogin,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 7\n              }\n            }, \"Fa\\xE7a seu login\"), React.createElement(Text, {\n              style: styles.ti,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 7\n              }\n            }, \"Email\"), React.createElement(TextInput, {\n              style: styles.input,\n              placeholder: \"\",\n              value: username,\n              onChangeText: function onChangeText(username) {\n                return setUsername(username);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 8\n              }\n            }), React.createElement(Text, {\n              style: styles.ti,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 8\n              }\n            }, \"Senha\"), React.createElement(TextInput, {\n              style: styles.input,\n              secureTextEntry: true,\n              placeholder: \"\",\n              value: password,\n              onChangeText: function onChangeText(password) {\n                return setPassword(password);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 8\n              }\n            }), React.createElement(TouchableOpacity, {\n              onPress: login,\n              style: styles.button,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 8\n              }\n            }, loading ? React.createElement(ActivityIndicator, {\n              size: \"small\",\n              color: \"#FFF\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 13\n              }\n            }) : React.createElement(Text, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 13\n              }\n            }, \"Prosseguir\")), React.createElement(TouchableOpacity, {\n              style: styles.buttone,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 8\n              }\n            }, React.createElement(Text, {\n              style: styles.tloginnn,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 10\n              }\n            }, \"Esqueci minha senha\")), React.createElement(TouchableOpacity, {\n              style: styles.buttonc,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 8\n              }\n            }, React.createElement(Text, {\n              style: styles.tloginn,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 10\n              }\n            }, \"cadastrar como candidato\")), React.createElement(TouchableOpacity, {\n              style: styles.buttonc,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 8\n              }\n            }, React.createElement(Text, {\n              style: styles.tloginn,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 10\n              }\n            }, \"cadastrar como empresa\"))));\n\n          case 26:\n            return _context2.abrupt(\"return\", React.createElement(AppLoading, {\n              startAsync: getFonts,\n              onFinish: function onFinish() {\n                return setFontsLoaded(true);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 7\n              }\n            }));\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this, [[3, 16]], Promise);\n  }\n\n  var styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#FBFBFB',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    logo: {\n      width: 220,\n      height: 60,\n      margin: 40\n    },\n    input: {\n      backgroundColor: '#FFFFFF',\n      margin: 10,\n      borderRadius: 15,\n      width: 250,\n      height: 35,\n      borderColor: 'black',\n      borderWidth: 0.2\n    },\n    button: {\n      backgroundColor: '#D20003',\n      margin: 10,\n      borderRadius: 15,\n      width: 250,\n      height: 35,\n      textAlign: \"center\",\n      justifyContent: 'center'\n    },\n    buttone: {\n      backgroundColor: '#016799',\n      margin: 10,\n      borderRadius: 15,\n      width: 250,\n      height: 35,\n      textAlign: \"center\",\n      justifyContent: 'center'\n    },\n    buttonc: {\n      backgroundColor: '#ffff',\n      margin: 10,\n      borderRadius: 15,\n      width: 200,\n      height: 35,\n      textAlign: \"center\",\n      justifyContent: 'center',\n      shadowOffset: {\n        width: 2,\n        height: 2\n      },\n      shadowColor: 'black',\n      shadowOpacity: 0.3,\n      fontSize: 12\n    },\n    tlogin: {\n      textDecorationColor: '#505050',\n      fontFamily: 'sansation-regular',\n      margin: 30\n    },\n    ti: {\n      marginRight: 190,\n      textDecorationColor: '#505050',\n      fontFamily: 'sansation-regular'\n    },\n    tloginn: {\n      color: '#016799',\n      fontFamily: 'sansation-regular',\n      textAlign: \"center\",\n      justifyContent: 'center'\n    },\n    tloginnn: {\n      fontFamily: 'sansation-regular',\n      color: '#E0E0E0',\n      textAlign: \"center\",\n      justifyContent: 'center'\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/senai/Desktop/Senai.Vagas.Mobile/Senai-Vagas-Mobile/src/screens/Login.tsx"],"names":["React","useState","Font","AppLoading","AsyncStorage","api","StackActions","NavigationActions","getFonts","loadAsync","require","Login","props","username","setUsername","password","setPassword","loading","setLoading","errorMessage","setErrorMessage","saveUser","user","setItem","JSON","stringify","login","length","credentials","email","post","response","data","resetAction","reset","index","actions","navigate","routeName","navigation","dispatch","console","log","fontsLoaded","setFontsLoaded","styles","container","logo","tlogin","ti","input","button","buttone","tloginnn","buttonc","tloginn","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","margin","borderRadius","borderColor","borderWidth","textAlign","shadowOffset","shadowColor","shadowOpacity","fontSize","textDecorationColor","fontFamily","marginRight","color"],"mappings":"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","sourcesContent":["\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport * as Font from 'expo-font';\r\nimport {AppLoading} from 'expo';\r\nimport { StyleSheet, Text, View , Image, TextInput , TouchableOpacity,AsyncStorage, ActivityIndicator} from 'react-native';\r\nimport api from '../services/api';\r\nimport { StackActions, NavigationActions } from 'react-navigation';\r\n\r\n\r\n\r\nconst getFonts = () => Font.loadAsync({\r\n  'sansation-regular': require('../assets/fonts/Sansation_Regular.ttf')\r\n});\r\n\r\n\r\nexport default function Login(props) {\r\n \r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  async function saveUser(user) {\r\n    await AsyncStorage.setItem('@ListApp:userToken', JSON.stringify(user))\r\n  }\r\n\r\n  async function login() {\r\n    if (username.length === 0) return\r\n\r\n    setLoading(true)\r\n\r\n    try {\r\n\r\n      const credentials = {\r\n        email: username,\r\n        password: password\r\n      }\r\n\r\n      const response = await api.post('/sessions', credentials)\r\n\r\n      const user = response.data\r\n\r\n      await saveUser(user)\r\n\r\n      const resetAction = StackActions.reset({\r\n        index: 0,\r\n        actions: [NavigationActions.navigate({ routeName: 'App' })],\r\n      })\r\n\r\n      setLoading(false)\r\n\r\n      props.navigation.dispatch(resetAction)\r\n    } catch (err) {\r\n      console.log(err)\r\n\r\n      setLoading(false)\r\n      setErrorMessage('Usuário não existe')\r\n    }\r\n    \r\n  const [fontsLoaded, setFontsLoaded] = useState(false);\r\n\r\n  if (fontsLoaded) {\r\n    return (\r\n      <View style={styles.container}>\r\n     <View>\r\n     <Image \r\n       style={styles.logo}\r\n       source={require('../assets/images/LogoAppVermelho.png')}\r\n       />\r\n     </View>\r\n      \r\n      <Text style={styles.tlogin}>Faça seu login</Text>\r\n      \r\n      <Text style={styles.ti}>Email</Text>\r\n       <TextInput\r\n       style={styles.input}\r\n       placeholder=\"\"\r\n       value={username}\r\n          onChangeText={username => setUsername(username)}\r\n       />\r\n\r\n       <Text style={styles.ti}>Senha</Text>\r\n       <TextInput\r\n       style={styles.input}\r\n       secureTextEntry={true}\r\n       placeholder=\"\"\r\n       value={password}\r\n          onChangeText={password => setPassword(password)}\r\n       />\r\n \r\n       <TouchableOpacity onPress={login} style={styles.button} >\r\n       {loading ? (\r\n            <ActivityIndicator size=\"small\" color=\"#FFF\" />\r\n          ) : (\r\n            <Text>Prosseguir</Text>\r\n          )}\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttone}>\r\n         <Text style={styles.tloginnn}>\r\n           Esqueci minha senha\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttonc}>\r\n         <Text style={styles.tloginn}>\r\n           cadastrar como candidato\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n       <TouchableOpacity style={styles.buttonc}>\r\n         <Text style={styles.tloginn}>\r\n           cadastrar como empresa\r\n         </Text>\r\n       </TouchableOpacity>\r\n \r\n     </View>\r\n   );\r\n \r\n    \r\n  } else {\r\n    return (\r\n      <AppLoading \r\n        startAsync={getFonts} \r\n        onFinish={() => setFontsLoaded(true)} \r\n      />\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FBFBFB',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    \r\n  },\r\n  \r\n  logo: {\r\n    width:220,\r\n    height: 60,\r\n    margin: 40\r\n   \r\n  },\r\n\r\n  input: {\r\n    backgroundColor: '#FFFFFF',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35,\r\n    \r\n    borderColor: 'black',\r\n    borderWidth: 0.2\r\n  },\r\n\r\n  button: {\r\n    backgroundColor: '#D20003',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35,\r\n    textAlign: \"center\",\r\n    justifyContent: 'center',\r\n    \r\n  },\r\n\r\n  buttone: {\r\n    backgroundColor: '#016799',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 250,\r\n    height:35,\r\n    textAlign: \"center\",\r\n    justifyContent: 'center',\r\n\r\n  },\r\n\r\n  buttonc: {\r\n    backgroundColor: '#ffff',\r\n    margin: 10,\r\n    borderRadius: 15,\r\n    width: 200,\r\n    height:35,\r\n    textAlign: \"center\",\r\n    justifyContent: 'center',\r\n    shadowOffset:{  width: 2,  height: 2,  },\r\n    shadowColor: 'black',\r\n    shadowOpacity: 0.3,\r\n    fontSize: 12\r\n    \r\n\r\n  },\r\n\r\n  tlogin: {\r\n    textDecorationColor: '#505050',\r\n    fontFamily: 'sansation-regular',\r\n    margin: 30,\r\n  },\r\n\r\n  ti:{\r\n    marginRight: 190,\r\n    textDecorationColor: '#505050',\r\n    fontFamily: 'sansation-regular'\r\n  },\r\n\r\n  tloginn: {\r\n    color: '#016799',\r\n    fontFamily: 'sansation-regular',\r\n    textAlign: \"center\",\r\n    justifyContent: 'center',\r\n  },\r\n  tloginnn:{\r\n    fontFamily: 'sansation-regular',\r\n    color:'#E0E0E0',\r\n    textAlign: \"center\",\r\n    justifyContent: 'center',\r\n  }\r\n});\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}